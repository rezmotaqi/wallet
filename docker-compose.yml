version: '3'
services:
  wallet:
    restart: always
    container_name: "wallet"
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - "./:/usr/app/core"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/home/wallet/media:/media"
    command: uvicorn app.main:app --reload --loop asyncio --host wallet
    env_file:
      - .env
    networks:
      - public
    ports:
      - "127.0.0.1:8000:8000"

  wallet-mongo:
    restart: always
    container_name: "wallet-mongo"
    image: "$MONGO_IMAGE"
    volumes:
      - '/database/w:/data/db'
    networks:
      - public
    ports:
      - "127.0.0.1:27017:27017"

  wallet-redis:
    restart: always
    container_name: "wallet-redis"
    image: "redis"
    networks:
      - public

  nginx:
    image: nginx:1.19.7
    user: root
    restart: always
    container_name: nginx
    volumes:
      - './nginx_conf/default.conf:/etc/nginx/conf.d/default.conf'
      - './nginx_conf/nginx.conf:/etc/nginx/user.conf.d/nginx.conf:ro'
      - '/home/wallet/media:/media'
    ports:
      - 80:80


#  nginx:
#    volumes:
#      - "/home/web_app:/usr/src/app"
#      - "/home/dash_app:/usr/src/dash-app"
#      - "/home/media:/media"
#      - "./nginx_conf/nginx.conf:/etc/nginx/user.conf.d/nginx.conf:ro"
#      - "./nginx_conf/mime.types:/etc/nginx/mime.types:ro"
#      - "letsencrypt:/etc/letsencrypt"
#    restart: always
#    image: staticfloat/nginx-certbot
#    ports:
#      - 80:80/tcp
#      - 443:443/tcp
#    environment:
#      CERTBOT_EMAIL: ali.hallaji1@gmail.com
#      # variable names are space-separated
#      ENVSUBST_VARS: FQDN DASH
#      FQDN: "$FQDN"
#      DASH: "$DASH"
#    #      FQDN: dev.netall.live
#    #      DASH: devback.netall.live
#    container_name: heisenbergWebServer
#    networks:
#      - public


volumes:
  letsencrypt:

networks:
  public:
    external: true
